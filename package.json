{
  "name": "mobiledoc-vdom-renderer",
  "version": "1.0.0",
  "description": "Render Mobiledoc as VDOM, for React or React-like `createElement` calls",
  "engines": {
    "node": ">=6"
  },
  "files": [
    "dist/"
  ],
  "module": "dist/module/index.js",
  "types": "dist/module/index.d.ts",
  "main": "dist/commonjs/index.js",
  "scripts": {
    "typecheck": "tsc --pretty --noEmit",
    "lint:ts": "tslint --config tslint.json --project tsconfig.json --exclude '**/*.js' --format stylish",
    "lint:js": "eslint . --ext .ts,.js --ignore-path .gitignore",
    "lint": "npm run typecheck; tsc --pretty --noEmit; npm run lint:ts; npm run lint:js",
    "format": "eslint . --ext .ts,.js --ignore-path .gitignore --fix && prettier '**/*.md' --write",
    "test:js": "nyc ava",
    "test": "npm run typecheck && tsc --pretty --noEmit && npm run lint:ts && npm run lint:js && npm run test:js",
    "snapshot": "ava --update-snapshots",
    "watch:lint": "chokidar '**/*.{ts,js}' --ignore node_modules/ --verbose --command 'tsc --pretty --noEmit; tslint --config tslint.json --project tsconfig.json --exclude \"**/*.js\" {path}; eslint {path}'",
    "watch:test": "ava --watch",
    "start": "concurrently 'npm run watch:lint' 'npm run watch:test' --raw",
    "commitmsg": "commit-msg-must-use-emoji",
    "build": "tsc --project tsconfig.module.json && tsc",
    "clean": "rm -rf dist",
    "prepublishOnly": "npm test && rm -rf dist && npm run build",
    "postpublish": "npm run clean"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bustle/mobiledoc-vdom-renderer.git"
  },
  "keywords": [
    "mobiledoc",
    "vdom",
    "react",
    "preact",
    "hyperscript",
    "createElement"
  ],
  "author": "Donald Tetto <donald@tetto.org>",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/bustle/mobiledoc-vdom-renderer/issues"
  },
  "homepage": "https://github.com/bustle/mobiledoc-vdom-renderer#readme",
  "devDependencies": {
    "ava": "^0.25.0",
    "chokidar-cli": "^1.2.0",
    "commit-msg-must-use-emoji": "^1.1.3",
    "concurrently": "^3.6.1",
    "eslint": "^5.4.0",
    "eslint-config-standard": "^11.0.0",
    "eslint-plugin-ava": "^5.1.0",
    "eslint-plugin-fp": "^2.3.0",
    "eslint-plugin-import": "^2.14.0",
    "eslint-plugin-node": "^7.0.1",
    "eslint-plugin-prettier": "^2.6.2",
    "eslint-plugin-promise": "^4.0.0",
    "eslint-plugin-standard": "^3.1.0",
    "husky": "^0.14.3",
    "jsdom": "^12.0.0",
    "nyc": "^12.0.2",
    "preact": "^8.3.1",
    "preact-render-to-string": "^3.8.2",
    "prettier": "^1.14.2",
    "react": "^16.4.2",
    "react-dom": "^16.4.2",
    "ts-node": "^7.0.1",
    "tslint": "^5.11.0",
    "tslint-config-standard": "^7.1.0",
    "typescript": "^3.0.1",
    "typescript-eslint-parser": "^18.0.0",
    "ultradom": "^2.3.4"
  },
  "prettier": {
    "printWidth": 80,
    "semi": false,
    "singleQuote": true
  },
  "ava": {
    "require": [
      "ts-node/register/transpile-only"
    ]
  },
  "nyc": {
    "extension": [
      ".ts"
    ],
    "exclude": [
      "**/*.d.ts",
      "coverage"
    ],
    "reporter": [
      "lcov",
      "text-summary"
    ],
    "require": [
      "ts-node/register/transpile-only"
    ],
    "all": true
  },
  "eslintConfig": {
    "parser": "typescript-eslint-parser",
    "plugins": [
      "prettier",
      "fp",
      "ava"
    ],
    "extends": [
      "standard",
      "plugin:fp/recommended",
      "plugin:ava/recommended"
    ],
    "rules": {
      "indent": "off",
      "prettier/prettier": "error",
      "arrow-body-style": "error",
      "arrow-parens": [
        "error",
        "as-needed"
      ],
      "complexity": [
        "error",
        {
          "max": 4
        }
      ],
      "import/order": "error",
      "max-depth": [
        "error",
        {
          "max": 2
        }
      ],
      "max-len": [
        "error",
        {
          "ignoreStrings": true,
          "ignoreTemplateLiterals": true,
          "ignoreTrailingComments": true
        }
      ],
      "max-nested-callbacks": [
        "error",
        {
          "max": 2
        }
      ],
      "max-params": [
        "error",
        {
          "max": 3
        }
      ],
      "max-statements-per-line": [
        "error",
        {
          "max": 1
        }
      ],
      "max-statements": [
        "error",
        {
          "max": 6
        }
      ],
      "no-param-reassign": [
        "error",
        {
          "props": true
        }
      ],
      "no-shadow": "error",
      "no-use-before-define": [
        "error",
        {
          "functions": true,
          "classes": true
        }
      ],
      "no-var": "error",
      "object-curly-spacing": [
        "error",
        "always"
      ],
      "object-shorthand": [
        "error",
        "always"
      ],
      "prefer-const": "error",
      "standard/array-bracket-even-spacing": "off"
    },
    "overrides": [
      {
        "files": [
          "**/*.ts"
        ],
        "rules": {
          "no-unused-vars": "off",
          "no-undef": "off"
        }
      },
      {
        "files": [
          "**/*.test.js",
          "test/**/*.js"
        ],
        "rules": {
          "fp/no-unused-expression": "off",
          "fp/no-nil": "off"
        }
      }
    ]
  },
  "dependencies": {}
}
